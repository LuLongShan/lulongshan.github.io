<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>process on Even - A super concise theme for Hugo</title><link>https://holicc.github.io/tags/process/</link><description>Recent content in process on Even - A super concise theme for Hugo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 25 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://holicc.github.io/tags/process/index.xml" rel="self" type="application/rss+xml"/><item><title>Fork And Exec</title><link>https://holicc.github.io/post/shell/process/</link><pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate><guid>https://holicc.github.io/post/shell/process/</guid><description>Intro When i view code of micro.I found a interesting function run,so i deep into it. Concededly Golang is static programing language,which don't have dymanic load class function like Java.So this function probably implement by executing a command.Fortunately,micro has pretty clean project structure,i can find it easily.
Create Service instance:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 func (r *localRuntime) Create(resource runtime.</description></item></channel></rss>